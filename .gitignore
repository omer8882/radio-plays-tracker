
# Project related
simple/
raw/
docs/
debug/
config.secret.json
config.json
proccessfilesandcleanup.py
*.mp3
temp/
frontend/radio-plays/build/
ops/cloudflared/config.yml
ops/cloudflared/*.json
ops/cloudflared/*.pem

.vscode

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
#build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
*.log.*
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/



# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
**/node_modules
**/.pnp
**.pnp.js

# testing
**/coverage

# production
#**/build

# misc
.DS_Store
.env.local
.env.development.local
.env.test.local
.env.production.local

npm-debug.log*
yarn-debug.log*
yarn-error.log*

# .NET / C# / Visual Studio
## Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
[Ww][Ii][Nn]32/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/
[Ll]ogs/

## Visual Studio cache/options
.vs/
.vscode/
*.suo
*.user
*.userosscache
*.sln.docstates
*.userprefs

## Build results specific to .NET
project.lock.json
project.fragment.lock.json
artifacts/

## NuGet Packages
*.nupkg
*.snupkg
**/packages/*
!**/packages/build/
*.nuget.props
*.nuget.targets

## Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap

## ReSharper
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

## JustCode
.JustCode

## TeamCity
_TeamCity*

## DotCover
*.dotCover

## AxoCover
.axoCover/*
!.axoCover/settings.json

## Coverlet
coverage*.json
coverage*.xml
coverage*.info

## Visual Studio code coverage
*.coverage
*.coveragexml

## NCrunch
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*

## MightyMoose
*.mm.*
AutoTest.Net/

## Web workbench (Sass)
.sass-cache/

## Installshield
[Ee]xpress/
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

## Click-Once directory
publish/

## Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
*.pubxml
*.publishproj

## Microsoft Azure Web App publish settings
PublishScripts/

## NuGet Packages Directory
**/[Pp]ackages/*
*.nuget.exe
**/[Pp]ackages.config

## Windows Store app package directories and files
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt
*.appx
*.appxbundle
*.appxupload

## Visual Studio cache
.vs/

## Visual Studio Trace Log
*.tlog

## Backup & report files from converting an old project file
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm
ServiceFabricBackup/
*.rptproj.bak

## SQL Server files
*.mdf
*.ldf
*.ndf

## Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings
*.rptproj.rsuser
*- [Bb]ackup.rdl
*- [Bb]ackup ([0-9]).rdl
*- [Bb]ackup ([0-9][0-9]).rdl

## Microsoft Fakes
FakesAssemblies/

## GhostDoc plugin
*.GhostDoc.xml

## Node.js Tools for Visual Studio
.ntvs_analysis.dat
node_modules/

## Visual Studio 6 build log
*.plg

## Visual Studio 6 workspace options
*.opt

## Visual Studio 6 auto-generated workspace
*.vbw

## Visual Studio 6 auto-generated project
*.vbp

## Visual Studio 6 workspace and project
*.dsw
*.dsp

## Visual Studio 6 technical files
*.ncb
*.aps

## Visual Studio LightSwitch build output
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions

## Paket dependency manager
.paket/paket.exe
paket-files/

## FAKE - F# Make
.fake/

## CodeRush personal settings
.cr/personal

## Python Tools for Visual Studio (PTVS)
*.pyc

## Cake
tools/**
!tools/packages.config

## Tabs Studio
*.tss

## Telerik's JustMock configuration
*.jmconfig

## BizTalk build output
*.btp.cs
*.btm.cs
*.odx.cs
*.xsd.cs

## OpenCover UI analysis results
OpenCover/

## Azure Stream Analytics local run output
ASALocalRun/

## MSBuild Binary and Structured Log
*.binlog

## NVidia Nsight GPU debugger configuration
*.nvuser

## MFractors (Xamarin productivity tools) working folder
.mfractor/

## Local History for Visual Studio
.localhistory/

## Visual Studio History (VSHistory) files
.vshistory/

## BeatPulse healthcheck temp database
healthchecksdb

## Backup folder for Package Reference Convert tool in Visual Studio 2017
MigrationBackup/

## Ionide (cross platform F# VS Code tools) working folder
.ionide/

## Fody - auto-generated XML schema
FodyWeavers.xsd

## VS Code files for those working on multiple tools
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

## Local History for Visual Studio Code
.history/

## Windows Installer files from build outputs
*.cab
*.msi
*.msix
*.msm
*.msp

## JetBrains Rider
.idea/
*.sln.iml

## Entity Framework Core Migrations
**/Migrations/*.Designer.cs
/backend/dotnet-server/src/RadioPlaysTracker.Api/appsettings.Development.json
